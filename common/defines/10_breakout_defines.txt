NGame = {
	START_DATE = "2036.1.1" 
	END_DATE = "2236.1.1" 
}

NPops = {
	CONVERSION_RATE = 0.0						# Percentage of pops who will Convert into a different Religion each month, if eligible
	MIN_CONVERSION = 0							# If there is any conversion at least this many people will convert
	
	MIN_FERTILITY_RATE = 0.01					# Minimum fertility rate, in percent to avoid rounding errors
	MAX_FERTILITY_RATE = 0.01						# Maximum fertility rate, in percent to avoid rounding errors
	MORTALITY_COEFFICIENT = 1.5					# The greater the mortality coefficient, the smaller mortality is suffered
	FERTILITY_DIVISOR = 0.03						# Fraction of minimum fertility that is the minimum mortality value at max Standard of Living
	
	WORKING_ADULT_RATIO_BASE = 0.50				# Base ratio of working adults to dependents, this can be overridden by pop type definition and country modifiers.
	WORKING_ADULT_RATIO_SKEW_MAXIMUM = 2.0		# When the ratio of working adults to dependents is skewed, it tends to correct itself, this value clamps the maximum effect of this
	DEPENDENT_CONSUMPTION_RATIO = 0.8			# Dependents consume this multiple of Needs compared to Working Adults
	
	SUBSISTENCE_DIVIDENDS_MULT = 0.5
	SUBSISTENCE_MARKET_CONSUMPTION_RATIO = 0.10	# The portion of Peasant buy packages that are added as state region consumption.
	
	
	LOW_POP_THRESHOLD = 5000					# If a state has less than this amount of pops per arable land, apply the low pop modifier
	HIGH_POP_THRESHOLD = 1000000					# If a state has more than this amount of pops per arable land, apply the high pop modifier
	
	MIGRATION_PULL_EMPTY_STATE = 100				# If a state has no pops at all, give it a huge migration pull
	MIGRATION_PULL_FROM_LIVING_STANDARD = 1			# Migration pull from each point of average living standard in target state	
	MIGRATION_PULL_UNEMPLOYMENT_POPS_MIN = 1000000 		# At less than this in number of unemployed pops, do not apply unemployment divisor
	MIGRATION_PULL_UNEMPLOYMENT_POPS_FOR_MAX_DIV = 5000000 # Num unemployed pops to apply max amount of unemployment divisor
	MIGRATION_PULL_UNEMPLOYMENT_DIV = 5				# At above max unemployed pops, migration pull is divided by this
	
	# The below factors are applied *after* migration pull threshold checks, so they only impact how large a share of migration a state gets
	MIGRATION_PULL_MULT_FROM_CULTURE_TARGET = 20.0			# Migration pull multiplied by this from target state being a cultural migration target
	MIGRATION_PULL_MULT_FROM_CULTURE_TARGET_ADJACENCY = 5.0	# Migration pull multiplied by this from target state being next to a cultural migration target
	MIGRATION_PULL_MULT_FROM_NO_DISCRIMINATION = 1.0		# Migration pull multiplier increased by this if pop is moving from discrimination to no discrimination (not applied to mass migration targets)
	MIGRATION_PULL_MULT_FROM_HOMELANDS = 0.5				# Migration pull  multiplier increased by this if pop is moving to cultural homelands (not applied to mass migration targets)
	
	# General factors for how many pops will migrate
	MIGRATION_PULL_HIGH_THRESHOLD = 1.25						#	State must have a migration pull of at least market average * this to get economic immigration
	MIGRATION_PULL_LOW_THRESHOLD = 0.75							# State must have a migration pull of less or equal than market average * this to get full amount of emigration
	ECONOMIC_MIGRATION_BASE = 0.05								# Base amount of a pop that wants to move for economic reasons
	ECONOMIC_MIGRATION_FROM_SOL_DIFFERENCE = 0.05				# Each point of difference of pop SoL to the market's average SoL makes this fraction of the pop want to economically migrate (in %)
	ECONOMIC_MIGRATION_STATE_POPULATION_THRESHOLD = 10000				# States with less pops than this have reduced economic emigration numbers to avoid total depopulation
	CULTURAL_MIGRATION_BASE = 0.02								# Base amount of a pop that wants to move due to mass migration
	CULTURAL_MIGRATION_FROM_RADICALS = 0.02						# At 100% radicals, this fraction of the pop wants to mass migrate
	MIGRATION_UNEMPLOYMENT_MULT = 10.0							# Amount of migration from SoL is increased by this when a pop is unemployed
	MIGRATION_MIN_STATE_POPS = 2000							# A state with less pops than this will not get emigration
	MIGRATION_MIN_POP_AMOUNT = 1								# No less than this amount of a pop can migrate each week (if any migration at all should happen)
	MIGRATION_MAX_POP_AMOUNT = 10000							# No more than this amount of a pop can migrate each week
	MIGRATION_MAX_PER_STATE_BASE = 1000							# No more than this amount of people can move from or to a state in a single week (base)	
	MIGRATION_MAX_PER_STATE_INFRASTRUCTURE = 10					# No more than this amount of people can move from or to a state in a single week (scales with infrastructure)
	MIGRATION_MAX_PER_STATE_UNEMPLOYMENT_ORIGIN_FRACTION = 0.01	# The amount of unemployed workers in a state * this value is added to how many people can move from it
	MIGRATION_MAX_PER_STATE_UNEMPLOYMENT_TARGET_FRACTION = 0.01	# The amount of unemployed workers in a state * this value is removed from how many people can move to it
	MIGRATION_MAX_PER_STATE_CULTURAL_MIGRATION_MULT = 5.0		# Weekly migration caps are multiplied by this amount by this for cultural-type migration
	MIGRATION_AVERAGE_ATTRACTION_EMIGRATION_MULT = 0.25			# States with an average migration attraction gets this multiplier to emigrants
	
} 
NEconomy = {
	ECONOMY_OF_SCALE_MAX_MULTIPLIER = 25				# Beyond this many building levels, do not apply further economy of scale bonuses
	ECONOMY_OF_SCALE_START_LEVEL = 6					# Level at which buildings start getting economy of scale bonuses. Levels lower than this value provide no bonus [>=1]
	
	
	POLLUTION_TARGET_DIVISOR_BASE = 1					# Base value to divide total pollution generation by for calculating state region pollution target level
	POLLUTION_TARGET_DIVISOR_ARABLE_LAND_MULT = 0.1		# Amount per arable land to add to pollution divisor
	POLLUTION_CHANGE_SPEED = 0.5						# Each day, pollution in state region changes by this amount towards target
	POLLUTION_MAX = 255
	POLLUTION_SPREAD_TO_NEIGHBOR = 0.25					# Adjacent state regions always have at least this much of their neighbor's pollution level
	
	
	MIN_GOODS_PRICE	= 0.1							# A good cannot have a lower base price than this
	PRICE_RANGE = 0.99   						# min price of a good is base * (1 - PRICE_RANGE), Max price is base * (1 + PRICE_RANGE), PRICE_RANGE is locked to [0-1]
	BUY_SELL_DIFF_AT_MAX_FACTOR = 3				# the difference between buy/consumption and sell/production at min/max pricing, e.g. if set to 4 then if buy orders are 4x sell orders price is maxed
	GOODS_SHORTAGE_PENALTY_THRESHOLD = 0.20		# If supply / demand is lower than this, start applying output penalties, by default this should ( 1 / BUY_SELL_DIFF_AT_MAX_FACTOR )
	GOODS_SHORTAGE_PENALTY_DRIFT_SPEED = 0.02   # Goods shortage penalty updates by this amount towards target each day
    GOODS_SHORTAGE_PENALTY_MAX = 0.95			# Goods shortage penalty can't be higher than this
	
	MAX_WEEKLY_CONSTRUCTION_PROGRESS = 500				# Max construction progress per week on a single project
	
	
	BASE_RESOURCE_DISCOVER_CHANCE = 0.02 		# Per day (1.0 = 1%)
	EMPLOYMENT_RESOURCE_DEPLETE_CHANCE = 0.001	# Multiplied by number of fully employed levels of the building
	DEFAULT_RESOURCE_DISCOVER_MIN_AMOUNT = 2	# Min amount of resources that will be discovered for each successful roll
	DEFAULT_RESOURCE_DISCOVER_MAX_AMOUNT = 4	# Max amount of resources that will be discovered for each successful roll	
	FULLY_DISCOVERED_RESOURCE_DEPLETE_CHANCE_MULT = 1.0 # The chance of a resource depleting is multiplied by this when all of the resource has been discovered
	DEFAULT_RESOURCE_DEPLETE_MIN_AMOUNT = 2		# Min amount of resources that will be depleted for each successful roll
	DEFAULT_RESOURCE_DEPLETE_MAX_AMOUNT = 4		# Max amount of resources that will be depleted for each successful roll	
		
	IN_DEFAULT_MINIMUM_PENALTY_SCALE = 0.5				# This amount of the 'in default' throughput penalty is applied right away
	IN_DEFAULT_DAYS_TO_FULL_PENALTY = 60				# How many days of being in default does it take to get the full throughput penalty
	DECLARE_BANKRUPTCY_PENALTY_DURATION_YEARS = 10		# How many years does it take for penalties from declaring bankruptcy to fully decay
	DECLARE_BANKRUPTCY_RADICALIZATION_SHARES_FACTOR = 0.9 # For each per-pop shares in their building, radicalize this percentage of a pop on 
}
NPolitics = {
	MIN_RADICALISM_FOR_REVOLUTION = 500
}
NAI = {
	CONSTRUCTION_MAX_NUM_EXISTING_CONSTRUCTIONS_BASE = 3 # If country has this number of constructions queued, don't add anymore (base)
	CONSTRUCTION_MAX_NUM_EXISTING_CONSTRUCTIONS_SCALED = 0.01 # If country has this number of constructions queued, don't add anymore (scaled by construction production)
	CONSTRUCTION_MAX_NUM_EXISTING_CONSTRUCTIONS_SCALED_MAX = 5 # CONSTRUCTION_MAX_NUM_EXISTING_CONSTRUCTIONS_SCALED can't be higher than this	
}
#开局镜头位置
NFrontend = {
	CAMERA_START_X = 200.0						# Initial position in main menu
	CAMERA_START_Y = 2400							# Y is height
	CAMERA_START_Z = 2000.0
}
