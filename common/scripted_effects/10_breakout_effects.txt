#出生抚育者比例结算
breeders_ratio_monthly_check = {
	save_scope_as = checked_country
	
	#计算抚育者资质参数
	#下限
	if = {
		limit = { has_law = law_type:law_no_womens_rights }
		set_variable = {
			name = min_breeders_ratio
			value = 0.45
		}
	}
	else_if = {
		limit = { has_law = law_type:law_women_own_property }
		set_variable = {
			name = min_breeders_ratio
			value = 0.40
		}
	}
	else_if = {
		limit = { has_law = law_type:law_women_in_the_workplace }
		set_variable = {
			name = min_breeders_ratio
			value = 0.25
		}
	}
	else = {
		set_variable = {
			name = min_breeders_ratio
			value = 0.10
		}
	}
	#上限
	set_variable = {
		name = max_breeders_ratio
		value = 0.55
	}

	#结算
	every_scope_state = {
		#最小抚育者比例决定抚育者获得其他职业的资质
		set_variable = {
			name = breeders_gain_other_qualifications_bonus
			value = 0
		}
		if = {	
			limit = {
				has_variable = breed_ratio
			}
			change_variable = {
				name = breeders_gain_other_qualifications_bonus
				add = var:breed_ratio
			}
		}
		change_variable = {
			name = breeders_gain_other_qualifications_bonus
			subtract = {
				value = scope:checked_country.var:min_breeders_ratio
				multiply = 3 #1个抚育者能产生6抚育能力，抚育者人口比例100%时候，抚育能力为300%
			}
		}
		if = {	
			limit = {
				var:breeders_gain_other_qualifications_bonus < 0
			}
			every_scope_pop = {
				limit = {
					NOT = { is_pop_type = breeder }
					is_employed = no
				}
				change_poptype =  pop_type:breeder
			}
		}

		#最大抚育者比例影响其他职业获得抚育者的资质
		set_variable = {
			name = other_gain_breeders_qualifications_bonus
			value = 0
		}
		if = {
			limit = {
				has_variable = breed_ratio
			}
			change_variable = {
				name = other_gain_breeders_qualifications_bonus
				subtract = var:breed_ratio
			}
		}
		change_variable = {
			name = other_gain_breeders_qualifications_bonus
			add = {
				value = scope:checked_country.var:max_breeders_ratio
				multiply = 3 #1个抚育者能产生6抚育能力，抚育者人口比例100%时候，抚育能力为300%
			}
		}
		if = {	
			limit = {
				var:other_gain_breeders_qualifications_bonus < 0
			}
			every_scope_pop = {
				limit = {
					is_pop_type = breeder
					is_employed = no
				}
				change_poptype =  pop_type:laborers
			}
		}
	}
}
#出生率结算
state_breed_monthly_check = {
	#计算各个地区的劳动力再生产能力
	save_scope_as = checked_state
	#计算劳动力再生产能力
	set_variable = {
		name = breed_power
		value = 0
	}
	set_variable = {
		name = breed_quality
		value = 0
	}
	every_scope_building = {
		limit = {
			OR = { #自给农业
				is_building_type = building_subsistence_farms
				is_building_type = building_subsistence_orchards
				is_building_type = building_subsistence_pastures
			}
		}
		if = {
			limit = { 
				OR = { #农奴制
					has_active_production_method = pm_serfdom 
					has_active_production_method = pm_serfdom_building_subsistence_pastures
					has_active_production_method = pm_serfdom_building_subsistence_orchards
				}
			}
			scope:checked_state = {
				change_variable = {
					name = breed_power
					add = {
						value = 84000 #农奴制一级提供84000再生产
						multiply = PREV.occupancy
						multiply = PREV.level
					}
				}
				change_variable = {
					name = breed_quality
					add = {
						value = 841 #农奴制一级提供840质量，为了避免显示为0，设定成841
						multiply = PREV.occupancy
						multiply = PREV.level
					}
				}
			}
		}
		else = {
			scope:checked_state = {
				change_variable = {
					name = breed_power
					add = {
						value = 60000 #自耕农一级提供60000再生产
						multiply = PREV.occupancy
						multiply = PREV.level
					}
				}
				change_variable = {
					name = breed_quality
					add = {
						value = 3001 #自耕农一级提供3000质量
						multiply = PREV.occupancy
						multiply = PREV.level
					}
				}
			}
		}
	}
	every_scope_building = {
		limit = {
			OR = { #居民区
				is_building_type = breed_center
			}
		}
		if = {
			limit = { has_active_production_method = pm_tradition_breeder } #多子多福
			scope:checked_state = {
				change_variable = {
					name = breed_power
					add = {
						value = 42000 #多子多福一级提供42000
						multiply = PREV.occupancy
						multiply = PREV.level
					}
				}
				change_variable = {
					name = breed_quality
					add = {
						value = 12600 #多子多福一级提供12600质量
						multiply = PREV.occupancy
						multiply = PREV.level
					}
				}
			}
		}
		else = {
			scope:checked_state = {
				change_variable = {
					name = breed_power
					add = {
						value = 30000 #优生优育一级提供30000
						multiply = PREV.occupancy
						multiply = PREV.level
					}
				}
				change_variable = {
					name = breed_quality
					add = {
						value = 15000 #优生优育一级提供15000质量
						multiply = PREV.occupancy
						multiply = PREV.level
					}
				}
			}
		}
	}
	
	#计算劳动力再生产能力
	set_variable = {
		name = breed_ratio
		value = var:breed_power
	}
	
	change_variable = {
		name = breed_ratio
		divide = {
			value = state_population
			min = 1
		}
	}

	#按照比例决定生育率buff
	#remove_modifier = breed_ratio_modifier
	#add_modifier = {
	#	name = breed_ratio_modifier
	#	multiplier = breed_ratio_mod
	#}
	#计算基础受教育机会
	set_variable = {
		name = base_education_access
		value = var:breed_quality
	}
	change_variable = {
		name = base_education_access
		divide = {
			value = var:breed_power
			min = 1
		}
	}
	remove_modifier = base_education_access_modifier
	add_modifier = {
		name = base_education_access_modifier
		multiplier = base_education_access_mod
	}
}

#生产经验结算
production_exp_monthly_check = {
	save_scope_as = checked_state
	#建筑暂时不能储存变量，储存在地区上进行测试

	if = {
		limit = { 
			OR = {
				NOT = { has_variable = production_exp }
				var:production_exp < 0
			}
		}
		set_variable = {
			name = production_exp
			value = 0
		}
	}
	#计算增长
	set_variable = { #来自于基建的增长
		name = production_exp_change
		value = {
			value = infrastructure
			multiply = 0.0001
		}
	}
	change_variable = { #衰退
		name = production_exp_change
		subtract = {
			value = var:production_exp
			multiply = 0.083
		}
	}
	change_variable = {
		name = production_exp
		add = var:production_exp_change
	}		
	change_variable = {
		name = production_exp
		add = var:production_exp_change
	}		
	
	
	
	#根据生产经验给buff
	every_scope_building = {
		limit = { always = yes }
		remove_modifier = production_exp_modifier
		add_modifier = {
			name = production_exp_modifier
			multiplier = PREV.production_exp_mod
		}
		remove_modifier = production_exp_over_cap_modifier
		add_modifier = {
			name = production_exp_over_cap_modifier
			multiplier = PREV.production_exp_over_cap_mod
		}
	}
}

#资源枯竭结算
resource_deplete_monthly_check = {
	save_scope_as = checked_state
	#煤
	if = {
		limit = {
			has_potential_resource = bg_coal_mining
		}
		#初始化
		if = {
			limit = { NOT = { has_variable = base_coal_resource }}
			set_variable = {
				name = base_coal_resource
				value = 100000
			}
		}
		if = {
			limit = { NOT = { has_variable = depleted_coal_resource }}
			set_variable = {
				name = depleted_coal_resource
				value = 0
			}
		}
		#计算每月采掘量
		set_variable = {
			name = new_depleted_coal_resource
			value = 0
		}
		every_scope_building = {
			limit = {
				is_building_type = building_coal_mine
			}
			#基础方式
			if = {
				limit = { has_active_production_method = pm_picks_and_shovels_building_coal_mine } 
				scope:checked_state = {
					change_variable = {
						name = new_depleted_coal_resource
						add = {
							value = 40
							multiply = PREV.occupancy
							multiply = PREV.level
						}
					}
				}
			}
			else_if = {
				limit = { has_active_production_method = pm_atmospheric_engine_pump_building_coal_mine } 
				scope:checked_state = {
					change_variable = {
						name = new_depleted_coal_resource
						add = {
							value = 80
							multiply = PREV.occupancy
							multiply = PREV.level
						}
					}
				}
			}
			else_if = {
				limit = { has_active_production_method = pm_condensing_engine_pump_building_coal_mine } 
				scope:checked_state = {
					change_variable = {
						name = new_depleted_coal_resource
						add = {
							value = 120
							multiply = PREV.occupancy
							multiply = PREV.level
						}
					}
				}
			}
			else_if = {
				limit = { has_active_production_method = pm_diesel_pump_building_coal_mine } 
				scope:checked_state = {
					change_variable = {
						name = new_depleted_coal_resource
						add = {
							value = 180
							multiply = PREV.occupancy
							multiply = PREV.level
						}
					}
				}
			}
			#炸药
			if = {
				limit = { has_active_production_method = pm_nitroglycerin_building_coal_mine } 
				scope:checked_state = {
					change_variable = {
						name = new_depleted_coal_resource
						add = {
							value = 30
							multiply = PREV.occupancy
							multiply = PREV.level
						}
					}
				}
			}
			else_if = {
				limit = { has_active_production_method = pm_dynamite_building_coal_mine } 
				scope:checked_state = {
					change_variable = {
						name = new_depleted_coal_resource
						add = {
							value = 50
							multiply = PREV.occupancy
							multiply = PREV.level
						}
					}
				}
			}
		}
		change_variable = {
			name = new_depleted_coal_resource
			multiply = {
				value = 1
				subtract = coal_resource_difficulty
			}
		}
		#更新采掘量
		change_variable = {
			name = depleted_coal_resource
			add = var:new_depleted_coal_resource
		}
		#调整buff
		remove_modifier = coal_mining_deplete_modifier
		if = {
			limit = { coal_resource_difficulty > 0.1 }
			add_modifier = {
				name = coal_mining_deplete_modifier
				multiplier = coal_resource_difficulty
			}
		}
	}
	
	#石油
		if = {
		limit = {
			has_potential_resource = bg_oil_extraction
		}
		#初始化
		if = {
			limit = { NOT = { has_variable = base_oil_resource }}
			set_variable = {
				name = base_oil_resource
				value = 1000000
			}
		}
		if = {
			limit = { NOT = { has_variable = depleted_oil_resource }}
			set_variable = {
				name = depleted_oil_resource
				value = 0
			}
		}
		#计算每月采掘量
		set_variable = {
			name = new_depleted_oil_resource
			value = 0
		}
		every_scope_building = {
			limit = {
				is_building_type = building_oil_rig
			}
			#基础方式
			if = {
				limit = { has_active_production_method = pm_steam_derricks } 
				scope:checked_state = {
					change_variable = {
						name = new_depleted_oil_resource
						add = {
							value = 120
							multiply = PREV.occupancy
							multiply = PREV.level
						}
					}
				}
			}
			else_if = {
				limit = { has_active_production_method = pm_combustion_derricks } 
				scope:checked_state = {
					change_variable = {
						name = new_depleted_oil_resource
						add = {
							value = 200
							multiply = PREV.occupancy
							multiply = PREV.level
						}
					}
				}
			}
		}
		change_variable = {
			name = new_depleted_oil_resource
			multiply = {
				value = 1
				subtract = oil_resource_difficulty
			}
		}
		#更新采掘量
		change_variable = {
			name = depleted_oil_resource
			add = var:new_depleted_oil_resource
		}
		#调整buff
		remove_modifier = oil_extraction_deplete_modifier
		if = {
			limit = { oil_resource_difficulty > 0.1 }
			add_modifier = {
				name = oil_extraction_deplete_modifier
				multiplier = oil_resource_difficulty
			}
		}
	}
}

#破产结算
bankruptcy_check = {
	if = {
		limit = {
			NOT = { exists = var:declaredbankruptcy }
			has_modifier = declared_bankruptcy
		}
		every_scope_state = {
			remove_building = building_barracks
			remove_building = building_naval_base
			remove_building = building_port
			remove_building = building_university
			remove_building = building_construction_sector
		}
		set_variable = {
			name = declaredbankruptcy
			days = 3650
			value = 233
		}
		change_infamy = 300
	}

}
breakout_AI = {
	#ai在资金过多的时候扩建建造部门
	if = {
		limit = {
			is_ai = yes
			has_wasted_construction = no
			OR = {
				gold_reserves > gold_reserves_limit
				investment_pool > gold_reserves_limit
			}
			weekly_net_fixed_income >= 10000
			construction_queue_duration > 30
			
		}
		random_scope_state = {
			limit = {
				is_incorporated = yes
				OR = {
					NOT = { has_building = building_construction_sector }
					any_scope_building = {
						is_building_type = building_construction_sector
						occupancy >= 0.9
					}
				}
			}
			start_building_construction = building_construction_sector
		}
	}
	#ai裁撤无能工厂，暂时做不到
	if = {
		limit = {
			always = no
			is_ai = yes
			construction_queue_duration < 3
		}
		every_scope_state = {
			limit = { market_access < 0.8 }
			random_scope_building = {
				limit = {
					is_under_construction = no
					cash_reserves_ratio < 0.01
					occupancy < 0.01
					weekly_profit < 0
				}
				save_scope_as = removed_building
			}
			#remove_building = scope:removed_building
		}
	}
}
#祭典节日
sacrifice_festival_effect = {
	add_modifier = {
		name = sacrifice_festival_modifier
		months = 1
		is_decaying = yes
	}
}